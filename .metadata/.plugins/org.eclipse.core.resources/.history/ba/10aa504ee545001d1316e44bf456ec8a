package test.com.mypage.controller;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.commons.io.FilenameUtils;

import test.com.activity.model.ActivityDAOimpl;
import test.com.activity.model.ActivityVO;
import test.com.club.model.ClubDAO;
import test.com.club.model.ClubDAOimpl;
import test.com.club.model.ClubVO;
import test.com.member.model.MemberDAO;
import test.com.member.model.MemberDAOimpl;
import test.com.member.model.MemberVO;

/**
 * 1. 작성자: 최수연 (백엔드) 
 * 2. 기능: 회원정보 수정, 탈퇴 및 내가 가입한 모임 리스트 조회
 */
@WebServlet({ "/mypage.do", "/mypage_update.do", "/mypage_updateOK.do", "/mypage_delete.do", "/mypage_deleteOK.do",
		"/mypage_club.do", "/mypage_activity.do" })

public class MypageController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private MemberDAO dao = new MemberDAOimpl();

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public MypageController() {
		super();

	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String sPath = request.getServletPath();
		System.out.println("doGet:" + sPath);

		if (sPath.equals("/mypage.do")) {
			// 로그인 세션 정보를 가져옵니다
			HttpSession session = request.getSession();
			String member_id = (String) session.getAttribute("member_id");
			System.out.println("member_id:" + member_id);
			// 회원아이디가 null값이 아닐 경우 if문을 정상적으로 실행합니다
			if (member_id != null) {
				System.out.println(request.getParameter("member_id"));
				member_id = request.getParameter("member_id");
				MemberVO vo = new MemberVO();
				vo.setMember_id(member_id);
				// 마이페이지에서 나의 회원정보를 출력합니다
				MemberVO vo2 = dao.selectOne(vo);
				System.out.println("vo2:" + vo2);
				request.setAttribute("vo2", vo2);

				List<ActivityVO> activity_list = new ActivityDAOimpl().selectAllByID(member_id);
				request.setAttribute("activity_list", activity_list);

				ClubVO vo1 = new ClubVO();
				vo1.setMember_id(member_id);
				ClubDAO dao1 = new ClubDAOimpl();
				List<ClubVO> myclublist = dao1.selectAllMyClub(vo1);// 내가 가입한 모임 리스트를 출력합니다
				System.out.println("myclublist:" + myclublist);
				request.setAttribute("myclublist", myclublist);
				request.getRequestDispatcher("MYPAGE/mypage.jsp").forward(request, response);
			} else
				request.getRequestDispatcher("HTML/login.jsp").forward(request, response);

		} else if (sPath.equals("/mypage_update.do")) {

			System.out.println(request.getParameter("member_id"));

			MemberVO vo = new MemberVO();

			vo.setMember_id(request.getParameter("member_id"));

			MemberVO vo2 = dao.selectOne(vo);// 회원정보 수정페이지에서 내 정보를 가져옵니다
			System.out.println("vo2:" + vo2);

			request.setAttribute("vo2", vo2);

			request.getRequestDispatcher("MYPAGE/update.jsp").forward(request, response);
		} else if (sPath.equals("/mypage_delete.do")) {
			request.getRequestDispatcher("MYPAGE/delete.jsp").forward(request, response);
		} else if (sPath.equals("/mypage_deleteOK.do")) {
			HttpSession session = request.getSession();
			String member_id = (String) session.getAttribute("member_id");
			System.out.println("member_id:" + member_id);

			if (member_id != null) {
				MemberVO vo = new MemberVO();

				vo.setMember_id(member_id);

				System.out.println(member_id);

				vo.setMember_id(request.getParameter("member_id"));

				int result = dao.delete(vo);// 회원 탈퇴합니다
				System.out.println(result);
				if (result == 1) {
					session.removeAttribute("member_id");
					response.sendRedirect("home.do");
				} else
					response.sendRedirect("mypage_deleteOK.do?member_id=" + member_id);
			} else
				request.getRequestDispatcher("HTML/login.jsp").forward(request, response);
		} // end deleteOK

	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		String sPath = request.getServletPath();

		System.out.print("doPost():");
		System.out.println(sPath);
		if (sPath.equals("/mypage_updateOK.do")) {
			HttpSession session = request.getSession();
			String member_id = (String) session.getAttribute("member_id");
			System.out.println("member_id:" + member_id);

			if (member_id != null) {

				String pw = null;
				String location = null;
				String img_name = null;

				String dir_path = request.getServletContext().getRealPath("/upload");
				System.out.println(dir_path);

				int fileSizeMax = 1024 * 1024 * 100;

				boolean isMultipartContent = ServletFileUpload.isMultipartContent(request);

				if (isMultipartContent) {
					DiskFileItemFactory factory = new DiskFileItemFactory();
					factory.setSizeThreshold(fileSizeMax);

					ServletFileUpload sfu = new ServletFileUpload(factory);
					sfu.setFileSizeMax(fileSizeMax);// 파일 사이즈 제한

					try {
						List<FileItem> items = sfu.parseRequest(request);

						for (FileItem item : items) {
							if (item.isFormField()) {
								if (item.getFieldName().equals("member_id")) {
									member_id = item.getString("UTF-8");
								}
								if (item.getFieldName().equals("pw")) {
									pw = item.getString("UTF-8");

								}

								if (item.getFieldName().equals("location")) {
									location = item.getString("UTF-8");

								}

							} else {// file 정보받기.
								img_name = FilenameUtils.getName(item.getName());
								if (item.getSize() != 0) {
									img_name = member_id + "_" + img_name;
									File saveFile = new File(dir_path, img_name);

									try {
										item.write(saveFile);
									} catch (Exception e) {
										e.printStackTrace();
									}
								}

							} // end else

						} // end for << items
					} catch (FileUploadException e) {

						e.printStackTrace();
					}

				} // end if << isMultipart
				System.out.println("member_id:" + member_id);
				System.out.println("pw:" + pw);
				System.out.println("location:" + location);
				System.out.println("img_name:" + img_name);

				MemberVO vo = new MemberVO();

				vo.setPw(pw);
				vo.setLocation(location);
				vo.setMember_id(member_id);
				vo.setImg_name(img_name.length() == 0 ? "profill.png" : img_name);// 첨부이미지 없을 경우 기본 프로필이미지 출력합니다
				int result = dao.update(vo);// 회원정보를 수정합니다
				System.out.println("result:" + result);

				if (result == 1) {
					response.sendRedirect("mypage.do?member_id=" + member_id);

				} else
					response.sendRedirect("mypage_update.do?member_id=" + member_id);

			} else
				request.getRequestDispatcher("HTML/login.jsp").forward(request, response);
		} // end updateok

	}// end dopost

}// end class